// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PingAPIHandlerFunc turns a function with the right signature into a ping API handler
type PingAPIHandlerFunc func(PingAPIParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PingAPIHandlerFunc) Handle(params PingAPIParams) middleware.Responder {
	return fn(params)
}

// PingAPIHandler interface for that can handle valid ping API params
type PingAPIHandler interface {
	Handle(PingAPIParams) middleware.Responder
}

// NewPingAPI creates a new http.Handler for the ping API operation
func NewPingAPI(ctx *middleware.Context, handler PingAPIHandler) *PingAPI {
	return &PingAPI{Context: ctx, Handler: handler}
}

/*
	PingAPI swagger:route GET /ping pingApi

PingAPI ping API API
*/
type PingAPI struct {
	Context *middleware.Context
	Handler PingAPIHandler
}

func (o *PingAPI) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPingAPIParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
